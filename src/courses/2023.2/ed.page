---
title: ED 
in_menu: true
sort_info: 2
---
# Estruturas de Dados

<BR/>
Horário: quartas e sextas de 7:00 às 9:00

Sala de aula virtual da disciplina: usaremos o [Google Classroom](http://classroom.google.com/) para as discussões e avisos. A sala de aula no Google Classroom será usada também para divulgar avisos gerais e para dúvidas. <BR/>

## Monitoria

Monitores: Lucas

Horários e local de atendimento: consulte a [página da monitoria](http://profs.ic.uff.br/~troy/Tutoring/2023_2.html).

## Ementa

- Árvores binárias, binárias de busca e AVL;
- Grafos;
- Arquivos; 
- Ordenação externa de arquivos (geração de partições classificadas e intercalação de partições);
- Árvores B e B+ (em memória principal e secundária);
- Tabelas hash (ou de dispersão) (em memória principal e secundária);
- Listas de prioridade (ou heaps) (em memória principal e secundária); 

## Avaliação

A avaliação da disciplina é composta de duas provas (P1 e P2) e de um conjunto de trabalhos de implementação (T). A média será calculada da seguinte forma: 

P1 = Prova sem consulta

P2 = Prova sem consulta

T = Média das notas dos trabalhos de implementação -- todos com correção via [RunCodes](https://run.codes/) 

$$ Média = \frac{(P1 \times 2) + (P2 \times 2) + T }{5} $$


**APROVADO**:<BR/> 
$$Presença \geq 75\% ~ E ~ Média \geq 6$$ 

**VERIFICAÇÃO SUPLEMENTAR**: <BR/>
$$Presença \geq 75\% ~ E ~ 4 \leq Média < 6$$

Será aprovado na VS o aluno que tirar nota maior ou igual a 6.

**REPROVADO**: caso contrário 

## Trabalhos de Implementação

Haverá um conjunto de implementações a serem entregues via [GitHub Classroom](https://classroom.github.com/classrooms/). As entregas possuem data marcada e entregas atrasadas não serão aceitas. Esse item compõe a média final da disciplina, e a nota desse item será calculada pela média aritmética dos trabalhos passados ao longo do semestre. Exercícios marcados como [TREINO] no GitHub Classroom não contam para compor a média. Apenas exercícios marcados como [AVALIAÇÃO] no GitHub Classroom contam para compor a média desse item.  


## Listas de Exercícios 

As listas de exercícios abaixo são sugeridas para auxiliar no estudo e fixação da matéria. 

* [Árvores Binárias](/material/ed/lista-arvore-binaria.pdf)
* [Árvores Binárias de Busca](/material/ed/lista-arvore-binaria-busca.pdf)
* [AVL](/material/ed/lista-avl.pdf) 
* [Grafos](/material/ed/lista-grafos.pdf)
* [Árvores B e B+](/material/ed/lista-arvores-b-bmais.pdf)
* [Tabelas Hash](/material/ed/lista-hash.pdf)

## Video-aulas no Youtube

As aulas da disciplina estão disponíveis no Youtube. Acesse a [playlist](https://youtube.com/playlist?list=PLYqZErLVzMfGDF0M2p-ZKKq0xDdGWuvqI) no meu [canal](https://www.youtube.com/channel/UCB0eF44ArWMdinU7ygks5SA). 

## Presença

De acordo com o [Regulamento dos Cursos de Graduação](http://www.uff.br/sites/default/files/001-2015_regulamento_do_curso_de_graduacao_0.pdf), a presença mínima necessária para aprovação é de 75% das aulas (Art. 96) e não há abono de faltas sem documentação (Art. 103).

## Bibliografia

Ferraz, I. N. Programação com Arquivos. Editora Manole Ltda. Barueri, 2003. 

Szwarcfiter, J., Markenzon, L. Estruturas de Dados e Seus Algoritmos. Editora LTC, 3a. edição, 2010.

Cormen, T.H., Leiserson, C.E., Rivest, R.L., Introduction to algorithms, McGraw-Hill, 2009.

Celes, W., Cerqueira, R., Rangel, J.L. Introdução a Estruturas de Dados, Campus, 1a
Edição, 2004.

Kernighan, B.W.,Ritchie, D.M. C: a linguagem de programação (Padrão ANSI), Campus, Segunda
Edição, 1990.

### Bibliografia Complementar

Tenenbaum, A.M., Langsam, Y., Augenstein, M.J. Estruturas de Dados Usando C, Pearson, Primeira Edição, 1995.

Ramakrishnan, R. Database Management Systems, McGraw Hill, Third Edition, 2003.

## Ferramentas

### IDE

Para programação em C, recomendo o [CLion](https://www.jetbrains.com/clion/?fromMenu). É possível solicitar uma licença grátis para estudante no site da [Jetbrains](https://www.jetbrains.com/student/).

### Compilador C

O CLion exige um compilador externo. Recomendo o GCC. 

* Para Windows, o há uma implementação do GCC chamada [MinGW](https://sourceforge.net/projects/mingw/)

* Para Linux e Mac, o GCC pode ser instalado usando o gerenciador de pacotes do seu sistema operacional (normalmente o apt-get para Linux e [homebrew](https://brew.sh/) para Mac). 

### Visualização de conteúdo de memória

Se você gosta de ver o que está ocorrendo na memória durante a execução do programa, recomendo o [Python Tutor](https://pythontutor.com/). Ele tem visualizadores para Python, C, C++, JavaScript e Ruby. Use o [C Tutor](https://pythontutor.com/c.html) para te ajudar a entender o que está ocorrendo na memória durante a execução do seu programa!  

### Memory Leak 

Para ajudar na identificação de memory leak, vocês podem usar as seguintes ferramentas: 

* [Dr. Memory](http://drmemory.org/docs/index.html) (funciona em todas as plataformas)

* [Valgrind](http://valgrind.org/) (específico para Linux)

### AVL

* Use [esse site](https://www.cs.usfca.edu/~galles/visualization/AVLtree.html) para simular inserções e remoções em árvores AVL de forma visual. 

## Cronograma

<!--

{: style="border-collapse: collapse; width: 100%; text-align: center;" border="1"}
|Data|Atividade
|--
|29/03/2022|Apresentação da Disciplina 
|31/03/2022|[Revisão de C](/material/ed/02-RevisaoC.pdf)
|05/04/2022|Aula no Laboratório
|07/04/2022|[Árvores e Árvores Binárias](/material/ed/03-ArvoresBinarias.pdf) <BR/>[Implementação de Árvore Binária](/material/ed/arvore-binaria.zip) 
|12/04/2022|[Árvores Binárias de Busca](/material/ed/04-ArvoresBinariasBusca.pdf) <BR/>[Implementação de Busca e Inserção em Árvore Binária de Busca](/material/ed/busca-insercao-abb.c) 
|14/04/2022|[Árvores AVL](/material/ed/05-ArvoresAVL.pdf)  
|19/04/2022|Aula no Laboratório
|21/04/2022|FERIADO
|26/04/2022|[Grafos](/material/ed/06-Grafos.pdf) 
|28/04/2022|Aula no Laboratório
|03/05/2022|[Arquivos](/material/ed/07-Arquivos.pdf)<BR/>[Tutorial de Acesso a Arquivos em C](/material/ed/tutorial-arquivos.zip) 
|05/05/2022|[Ordenação de Arquivos](/material/ed/08-Ordenacao.pdf)<BR/>[Insertion Sort em Memória e em Disco para Ordenar Arquivos](/material/ed/insertion-sort.zip)  
|10/05/2022|Aula no Laboratório
|12/05/2022|Ordenação Externa de Arquivos: [Geração de Partições Classificadas](/material/ed/09-GeracaoParticoes.pdf)<BR/>[Implementação de Classificação Interna](/material/ed/geracao-particoes.zip)
|17/05/2022|Aula CANCELADA por motivos de saúde
|19/05/2022|Ordenação Externa de Arquivos: [Intercalação de Partições Classificadas](/material/ed/10-Intercalacao.pdf)<BR/>[Implementação de Intercalação](/material/ed/intercalacao.zip)
|24/05/2022|AULA
|26/05/2022|**PROVA 1**
|31/05/2022|Aula CANCELADA por motivos de saúde
|02/06/2022|[Árvore B](/material/ed/11-ArvoreB.pdf)<BR/>[Implementação de Busca e Inserção em Árvore B em memória](/material/ed/arvore-b.zip)
|07/06/2022|Árvore B (continuação) 
|09/06/2022|[Árvore B+](/material/ed/12-ArvoreBMais.pdf)
|14/06/2022|VISTA DE PROVA + Aula no Laboratório
|16/06/2022|FERIADO
|21/06/2022|[Tabelas Hashi](/material/ed/13-TabelasHash.pdf). [Tratamento de colisão por encadeamento exterior](/material/ed/13-TabelasHash-Encadeamento-Exterior.pdf). <BR/>[Implementação Básica de Tabela Hash em memória](/material/ed/hash-basico.c) (Essa implementação não trata colisões)<BR/>[Implementação de Tabela Hash em memória com tratamento de colisões por Encadeamento Exterior](/material/ed/hash-encadeamento-exterior.c)
|23/06/2022|[Tratamento de colisão por encadeamento interior](/material/ed/13-TabelasHash-Encadeamento-Interior.pdf)<BR/>[Implementação de Tabela Hash em memória com tratamento de colisões por Encadeamento Interior](/material/ed/hash-encadeamento-interior.c)
|28/06/2022|Aula no Laboratório
|30/06/2022|[Tratamento de colisão por endereçamento aberto](/material/ed/13-TabelasHash-Enderecamento-Aberto.pdf)
|05/07/2022|Aula no Laboratório
|07/07/2022|[Heap](/material/ed/14-Heap.pdf)<BR/>[Implementação em memória](/material/ed/heap.c)<BR/>[Implementação em disco](/material/ed/heap-disco.c)
|12/07/2022|**PROVA 2**
|14/07/2022|**SEGUNDA CHAMADA**
|19/07/2022|VISTA DE PROVA
|21/07/2019|**VS** 
|26/07/2019|VISTA DE VS

-->

{: style="border-collapse: collapse; width: 100%; text-align: center;" border="1"}
|Data|Atividade
|--
|30/08/2023| Apresentação da disciplina
|01/09/2023| [Revisão de C](/material/ed/02-RevisaoC.pdf)
|06/09/2023| Aula no Laboratório
|08/09/2023| **SEM AULA - FERIADO**
|13/09/2023| [Árvores e Árvores Binárias](/material/ed/03-ArvoresBinarias.pdf) <BR/>[Implementação de Árvore Binária](/material/ed/arvore-binaria.zip) <BR/>Material de Apoio: [Revisão de Pilhas e Filas em C](/material/ed/02-Revisao-Pilhas-Filas.pdf)
|15/09/2023| [Árvores Binárias de Busca](/material/ed/04-ArvoresBinariasBusca.pdf) <BR/>[Implementação de Busca e Inserção em Árvore Binária de Busca](/material/ed/busca-insercao-abb.c) 
|20/09/2023| Aula no Laboratório
|22/09/2023| [Árvores AVL](/material/ed/05-ArvoresAVL.pdf) 
|27/09/2023| [Grafos](/material/ed/06-Grafos.pdf) 
|29/09/2023| Aula no Laboratório
|04/10/2023| [Arquivos](/material/ed/07-Arquivos.pdf)<BR/>[Tutorial de Acesso a Arquivos em C](/material/ed/tutorial-arquivos.zip)   
|06/10/2023| Aula no Laboratório
|11/10/2023| [Ordenação de Arquivos](/material/ed/08-Ordenacao.pdf)<BR/>[Insertion Sort em Memória e em Disco para Ordenar Arquivos](/material/ed/insertion-sort.zip) <BR/>Ordenação Externa de Arquivos: [Geração de Partições Classificadas](/material/ed/09-GeracaoParticoes.pdf)<BR/>[Implementação de Classificação Interna](/material/ed/geracao-particoes.zip)
|13/10/2023| **SEM AULA - FERIADO**
|18/10/2023| **SEM AULA - AGENDA ACADÊMICA**
|20/10/2023| **SEM AULA - AGENDA ACADÊMICA**
|25/10/2023| **PROVA 1**
|27/10/2023| Ordenação Externa de Arquivos: [Intercalação de Partições Classificadas](/material/ed/10-Intercalacao.pdf)<BR/>[Implementação de Intercalação](/material/ed/intercalacao.zip)
|01/11/2023| [Árvore B](/material/ed/11-ArvoreB.pdf)<BR/>[Implementação de Busca e Inserção em Árvore B em memória](/material/ed/arvore-b.zip)
|03/11/2023| **SEM AULA - FERIADO**
|08/11/2023| Árvore B (continuação)
|10/11/2023| AULA CANCELADA por problemas de saúde: fazer o exercício postado no GitHub Classroom
|15/11/2023| **SEM AULA - FERIADO**
|17/11/2023| AULA CANCELADA por problemas de saúde: assistir a [vídeo aula](https://youtu.be/BaTG9xNPCK8?si=Df701AwJ7o0mGJGF) e acompanhar os slides sobre [Árvore B+](/material/ed/12-ArvoreBMais.pdf)
|22/11/2023| [Tabelas Hashi](/material/ed/13-TabelasHash.pdf). [Tratamento de colisão por encadeamento exterior](/material/ed/13-TabelasHash-Encadeamento-Exterior.pdf). <BR/>[Implementação Básica de Tabela Hash em memória](/material/ed/hash-basico.c) (Essa implementação não trata colisões)<BR/>[Implementação de Tabela Hash em memória com tratamento de colisões por Encadeamento Exterior](/material/ed/hash-encadeamento-exterior.c)
|24/11/2023| Aula no Laboratório + Vista de Prova
|29/11/2023| [Heap](/material/ed/14-Heap.pdf)<BR/>[Implementação em memória](/material/ed/heap.c)<BR/>[Implementação em disco](/material/ed/heap-disco.c)
|01/12/2023| Aula de dúvidas
|06/12/2023| **PROVA 2**
|08/12/2023| **SEGUNDA CHAMADA (sala 213)**
|13/12/2023| VISTA DE P2 e SEGUNDA CHAMADA (sala 521)
|15/12/2023| **VS (sala 213)**
|20/12/2023| VISTA DE VS (sala 521)
